name: ci
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: lint
        run: make lint
      - name: mypy
        run: make mypy

  test:
    name: test py${{ matrix.python-version }} pg-${{ matrix.postgres-version }}
    runs-on: ubuntu-latest
    services:
      postgres:
        # Docker Hub image
        image: bitnami/postgresql:${{ matrix.postgres-version }}
        # Provide the password for postgres
        env:
          POSTGRESQL_PASSWORD: test_pw
          POSTGRES_DB: test_db
          POSTGRESQL_WAL_LEVEL: logical
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd "pg_isready -d test_db -U postgres -p 5432"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        postgres-version: ["12.9.0", "13.6.0"]
    env:
      # follows libpq env conventions https://www.postgresql.org/docs/12/libpq-envars.html
      PGDATABASE: test_db
      PGHOST: localhost
      PGUSER: postgres
      PGPASSWORD: test_pw
      PGPORT: 5432
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: test
        run: make test
